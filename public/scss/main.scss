/* Imports */
@import "partials/functions";
@import "partials/variables";
@import "mixins/mixins";

// SCSS Imports === CSS Imports in the following cases:
//@import url()
//@import "http://"
//@import "filename.css"
//@import "style-screen screen;"

/* Fonts */
@include google-font("Alegreya+Sans");
@include google-font("Poppins");

/* Styles */
body {
  font-family: sans-serif;
  color: $text-color;
  font-size: em(18px);

  @include medium-screens {
    font-size: 125%;
  }
}

h1, h2, h3, h4 {
  font-family: $headline-font;
}

p {
  font-family: $text-font;
}

a {
  color: $link-color;
  
  // Use "&:" for pseudo-states!
  &:hover {
    color: darken($link-color, 15%);
  }
}

img {
  display: block;
}

.warning-button {
  @include warning;
  @include large-text;
  @include rounded(8px);
  padding: 9px 12px;
}

// You can @extend styles using any existing 
// class or single-element selector...mixins
// can also be used here; The only thing that WON'T
// work here is adding multiple (@extend .warning-button, .something) 
// or child selectors (@extend .warning-button p)
.cta-button {
  @extend .warning-button;
  @include rounded;
  font-weight: bold;
}

// You can also chain extensions together; to make this work within
// a media query, you'd have to extend ONLY WIHTIN the media query;
// the !optional flag can be added to extend the class ONLY if it exists;
.super-cta-button {
  @extend .cta-button !optional;
  text-decoration: underline;
}

// You can also define extend-only styles that do not get carried
// into the compiled output (only inherited for other elements)
%highlight {
  font-style: italic;
}

.sub-title {
  @extend %highlight;
  font-size: em(20px);
  background-color: yellow;
}

@include apply-to-ie-6 {
  body {
    font-size: 125%;
  }
}

#header {
  @include box(24px, 1px solid black);
	height: $header-height;
  @include box-shadow(2px 0px 4px #999, 1px 1px 6px $secondary-color);

  #main-menu {
    li {
      display: inline-block;
    }

    a {
      color: $menu-item-color;
      padding: 6px 8px;
      // Transparentize function reduces opacity
      border-bottom: 1px solid transparentize(black, 1);
      transition: border-bottom 0.5s;
      transition-timing-function: ease-in-out;

      &:hover {
        // Opacify function adds opacity
        border-bottom: 1px solid opacify(black, .5);
    }
  }

}
  
  #logo {
  }
}

#main {
  width: $content-width;
  @include small-screens { 
    width: auto;
    max-width: 960px; 
  }
  margin-left: auto;
  margin-right: auto;

  #content {
    float: left;
    width: 6*$col;
  }

  #sidebar {
    float: right;
    width: 2*$col;

    li {
      list-style-type: none;
    }
  }
}

#footer {
  height: $footer-height;
}

#peter-special-id {
  font-weight: bold;
  color: blue;
}
