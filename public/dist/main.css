/* Imports */
/* Mixins */
/* Variable arguments can be added using '...' */
/* Default value is added with ": {value}" */
/* 
 * Default values must be referenced explicitly
 * if you wanted to use box(default radius, custom border)
 * you would do so by adding box($border: {values};
*/
/* Fonts */
@import url(https://fonts.googleapis.com/css?family=Alegreya+Sans);
@import url(https://fonts.googleapis.com/css?family=Poppins);
/* Styles */
body {
  font-family: sans-serif;
  color: #222;
  font-size: 1.125em; }
  @media only screen and (max-width: 960px) {
    body {
      font-size: 125%; } }

h1, h2, h3, h4 {
  font-family: "Alegreya+Sans", Georgia, serif; }

p {
  font-family: "Poppins", Arial, sans-serif; }

a {
  color: #f27731; }
  a:hover {
    color: #ca510d; }

img {
  display: block; }

.warning-button {
  background-color: orange;
  color: #fff;
  font-size: 22px;
  font-weight: bold;
  border-radius: 8px;
  padding: 9px 12px; }
  .warning-button:hover {
    background-color: #ffc966; }

* html body {
  font-size: 125%; }

#header {
  /* Mixins within mixins! */
  border-radius: 24px;
  border: 1px solid black;
  height: 60px;
  -webkit-box-shadow: 2px 0px 4px #999, 1px 1px 6px #f27731;
  box-shadow: 2px 0px 4px #999, 1px 1px 6px #f27731; }
  #header #main-menu li {
    display: inline-block; }
  #header #main-menu a {
    color: blue;
    padding: 6px 8px;
    border-bottom: 1px solid rgba(0, 0, 0, 0);
    -webkit-transition: border-bottom 0.5s;
    transition: border-bottom 0.5s;
    -webkit-transition-timing-function: ease-in-out;
    transition-timing-function: ease-in-out; }
    #header #main-menu a:hover {
      border-bottom: 1px solid black; }

#main {
  width: 90vw;
  margin-left: auto;
  margin-right: auto; }
  @media only screen and (max-width: 480px) {
    #main {
      width: auto;
      max-width: 960px; } }
  #main #content {
    float: left;
    width: 69.75%; }
  #main #sidebar {
    float: right;
    width: 23.25%; }
    #main #sidebar li {
      list-style-type: none; }

#footer {
  height: 90px; }

#peter-special-id {
  font-weight: bold;
  color: blue; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1peGlucy9fbWl4aW5zLnNjc3MiLCJwYXJ0aWFscy9fdmFyaWFibGVzLnNjc3MiLCJwYXJ0aWFscy9fZnVuY3Rpb25zLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYTtBQ0FiLFlBQVk7QUE4QlosaURBQWlEO0FBeUJqRCw2Q0FBNkM7QUFLN0M7Ozs7RUFJRTtBRHJERixXQUFXO0FDT1QsbUVBQVk7QUFBWiw2REFBWTtBREhkLFlBQVk7QUFDWjtFQUNFLHdCQUF1QjtFQUN2QixZRWpCZTtFRmtCZixtQkdaaUMsRUhpQmxDO0VDZEM7SURNRjtNQU1JLGdCQUFlLEVBRWxCLEVBQUE7O0FBRUQ7RUFDRSw2Q0VqQjZDLEVGa0I5Qzs7QUFFRDtFQUNFLDBDRXRCc0MsRUZ1QnZDOztBQUVEO0VBQ0UsZUVoQ3VCLEVGc0N4QjtFQVBEO0lBS0ksZUFBK0IsRUFDaEM7O0FBR0g7RUFDRSxlQUFjLEVBQ2Y7O0FBRUQ7RUN6QkUseUJBQXdCO0VBQ3hCLFlBQVc7RUF1QlQsZ0JBQVU7RUFDVixrQkFBWTtFQVVkLG1CRFBvQjtFQUNwQixrQkFBaUIsRUFDbEI7RUFMRDtJQ3JCSSwwQkFBc0MsRUFDdkM7O0FENEJEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBR0g7RUNNRSwyQkFBMkI7RUFUM0Isb0JESWlCO0VDT2pCLHdCRFBrQztFQUNuQyxhRWhEbUI7RURrQmxCLDBEQzdCdUI7RUQ2QnZCLGtEQzdCdUIsRUZxRnhCO0VBNUJEO0lBT00sc0JBQXFCLEVBQ3RCO0VBUkw7SUFXTSxZRWpFZ0I7SUZrRWhCLGlCQUFnQjtJQUVoQiwwQ0FBaUQ7SUFDakQsdUNBQThCO0lBQTlCLCtCQUE4QjtJQUM5QixnREFBdUM7SUFBdkMsd0NBQXVDLEVBTTFDO0lBdEJIO01Bb0JRLCtCQUEyQyxFQUM5Qzs7QUFTTDtFQUNFLFlFOUVrQjtFRm1GbEIsa0JBQWlCO0VBQ2pCLG1CQUFrQixFQWVuQjtFQzVHQztJRHNGRjtNQUdJLFlBQVc7TUFDWCxpQkFBZ0IsRUFrQm5CLEVBQUE7RUF0QkQ7SUFVSSxZQUFXO0lBQ1gsY0FBYSxFQUNkO0VBWkg7SUFlSSxhQUFZO0lBQ1osY0FBYSxFQUtkO0lBckJIO01BbUJNLHNCQUFxQixFQUN0Qjs7QUFJTDtFQUNFLGFFcEdrQixFRnFHbkI7O0FBRUQ7RUFDRSxrQkFBaUI7RUFDakIsWUFBVyxFQUNaIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogSW1wb3J0cyAqL1xyXG5AaW1wb3J0IFwicGFydGlhbHMvZnVuY3Rpb25zXCI7XHJcbkBpbXBvcnQgXCJwYXJ0aWFscy92YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcIm1peGlucy9taXhpbnNcIjtcclxuXHJcbi8vIFNDU1MgSW1wb3J0cyA9PT0gQ1NTIEltcG9ydHMgaW4gdGhlIGZvbGxvd2luZyBjYXNlczpcclxuLy9AaW1wb3J0IHVybCgpXHJcbi8vQGltcG9ydCBcImh0dHA6Ly9cIlxyXG4vL0BpbXBvcnQgXCJmaWxlbmFtZS5jc3NcIlxyXG4vL0BpbXBvcnQgXCJzdHlsZS1zY3JlZW4gc2NyZWVuO1wiXHJcblxyXG4vKiBGb250cyAqL1xyXG5AaW5jbHVkZSBnb29nbGUtZm9udChcIkFsZWdyZXlhK1NhbnNcIik7XHJcbkBpbmNsdWRlIGdvb2dsZS1mb250KFwiUG9wcGluc1wiKTtcclxuXHJcbi8qIFN0eWxlcyAqL1xyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICBjb2xvcjogJHRleHQtY29sb3I7XHJcbiAgZm9udC1zaXplOiBlbSgxOHB4KTtcclxuXHJcbiAgQGluY2x1ZGUgbWVkaXVtLXNjcmVlbnMge1xyXG4gICAgZm9udC1zaXplOiAxMjUlO1xyXG4gIH1cclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQge1xyXG4gIGZvbnQtZmFtaWx5OiAkaGVhZGxpbmUtZm9udDtcclxufVxyXG5cclxucCB7XHJcbiAgZm9udC1mYW1pbHk6ICR0ZXh0LWZvbnQ7XHJcbn1cclxuXHJcbmEge1xyXG4gIGNvbG9yOiAkbGluay1jb2xvcjtcclxuICBcclxuICAvLyBVc2UgXCImOlwiIGZvciBwc2V1ZG8tc3RhdGVzIVxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6IGRhcmtlbigkbGluay1jb2xvciwgMTUlKTtcclxuICB9XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi53YXJuaW5nLWJ1dHRvbiB7XHJcbiAgQGluY2x1ZGUgd2FybmluZztcclxuICBAaW5jbHVkZSBsYXJnZS10ZXh0O1xyXG4gIEBpbmNsdWRlIHJvdW5kZWQoOHB4KTtcclxuICBwYWRkaW5nOiA5cHggMTJweDtcclxufVxyXG5cclxuQGluY2x1ZGUgYXBwbHktdG8taWUtNiB7XHJcbiAgYm9keSB7XHJcbiAgICBmb250LXNpemU6IDEyNSU7XHJcbiAgfVxyXG59XHJcblxyXG4jaGVhZGVyIHtcclxuICBAaW5jbHVkZSBib3goMjRweCwgMXB4IHNvbGlkIGJsYWNrKTtcclxuXHRoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0O1xyXG4gIEBpbmNsdWRlIGJveC1zaGFkb3coMnB4IDBweCA0cHggIzk5OSwgMXB4IDFweCA2cHggJHNlY29uZGFyeS1jb2xvcik7XHJcblxyXG4gICNtYWluLW1lbnUge1xyXG4gICAgbGkge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB9XHJcblxyXG4gICAgYSB7XHJcbiAgICAgIGNvbG9yOiAkbWVudS1pdGVtLWNvbG9yO1xyXG4gICAgICBwYWRkaW5nOiA2cHggOHB4O1xyXG4gICAgICAvLyBUcmFuc3BhcmVudGl6ZSBmdW5jdGlvbiByZWR1Y2VzIG9wYWNpdHlcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHRyYW5zcGFyZW50aXplKGJsYWNrLCAxKTtcclxuICAgICAgdHJhbnNpdGlvbjogYm9yZGVyLWJvdHRvbSAwLjVzO1xyXG4gICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XHJcblxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICAvLyBPcGFjaWZ5IGZ1bmN0aW9uIGFkZHMgb3BhY2l0eVxyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBvcGFjaWZ5KGJsYWNrLCAuNSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG4gIFxyXG4gICNsb2dvIHtcclxuICB9XHJcbn1cclxuXHJcbiNtYWluIHtcclxuICB3aWR0aDogJGNvbnRlbnQtd2lkdGg7XHJcbiAgQGluY2x1ZGUgc21hbGwtc2NyZWVucyB7IFxyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDk2MHB4OyBcclxuICB9XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG5cclxuICAjY29udGVudCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiA2KiRjb2w7XHJcbiAgfVxyXG5cclxuICAjc2lkZWJhciB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB3aWR0aDogMiokY29sO1xyXG5cclxuICAgIGxpIHtcclxuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuI2Zvb3RlciB7XHJcbiAgaGVpZ2h0OiAkZm9vdGVyLWhlaWdodDtcclxufVxyXG5cclxuI3BldGVyLXNwZWNpYWwtaWQge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcbiIsIi8qIE1peGlucyAqL1xuLy8gTWl4aW5zIGZvciBtZWRpYSBxdWVyaWVzIVxuQG1peGluIHNtYWxsLXNjcmVlbnMoKSB7XG4gIC8vIENvbnRlbnQgcGFzc2luZyBpcyB1c2VkIGV4dGVuc2l2ZWx5IGluIHJlc3BvbnNpdmUgbWVkaWEgcXVlcnkgbWl4aW5zXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gbWVkaXVtLXNjcmVlbnMoKSB7XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTYwcHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gZ29vZ2xlLWZvbnQoJGZvbnQpIHtcbiAgJGZvbnQ6IHVucXVvdGUoJGZvbnQpO1xuICAvLyBDU1MgaW1wb3J0cyBjYW4gYmUgaW50ZXJwb2xhdGVkIHVzaW5nIHRoZSAje30gc3ludGF4XG4gIEBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT0jeyRmb250fSlcbn1cblxuQG1peGluIHdhcm5pbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XG4gIGNvbG9yOiAjZmZmO1xuXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4ob3JhbmdlLCAyMCUpO1xuICB9XG59XG5cbi8qIFZhcmlhYmxlIGFyZ3VtZW50cyBjYW4gYmUgYWRkZWQgdXNpbmcgJy4uLicgKi9cbkBtaXhpbiBib3gtc2hhZG93KCRzaGFkb3dzLi4uKSB7XG4gIGJveC1zaGFkb3c6ICRzaGFkb3dzO1xufVxuXG4vLyBDb250ZW50IGRpcmVjdGl2ZSBhZGRzIGF0dHJpYnV0ZXMgYWZ0ZXIgKiBodG1sXG4vLyAqIGh0bWwgaXMganVzdCB0aGUgZXhhbXBsZSBmb3IgdGhpcyBJRTYgXG4vLyB0aGlzIGlzIGNhbGxlZCBcImNvbnRlbnQgcGFzc2luZ1wiXG5AbWl4aW4gYXBwbHktdG8taWUtNiB7XG4gICogaHRtbCB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGxhcmdlLXRleHQge1xuICBmb250OiB7XG4gICAgc2l6ZTogMjJweDtcbiAgICB3ZWlnaHQ6IGJvbGQ7XG4gIH1cbn1cblxuQG1peGluIGZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4vKiBEZWZhdWx0IHZhbHVlIGlzIGFkZGVkIHdpdGggXCI6IHt2YWx1ZX1cIiAqL1xuQG1peGluIHJvdW5kZWQoJHJhZGl1czogNnB4KSB7XG4gIGJvcmRlci1yYWRpdXM6ICRyYWRpdXM7XG59XG5cbi8qIFxuICogRGVmYXVsdCB2YWx1ZXMgbXVzdCBiZSByZWZlcmVuY2VkIGV4cGxpY2l0bHlcbiAqIGlmIHlvdSB3YW50ZWQgdG8gdXNlIGJveChkZWZhdWx0IHJhZGl1cywgY3VzdG9tIGJvcmRlcilcbiAqIHlvdSB3b3VsZCBkbyBzbyBieSBhZGRpbmcgYm94KCRib3JkZXI6IHt2YWx1ZXN9O1xuKi9cbkBtaXhpbiBib3goJHJhZGl1cywgJGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrKSB7XG4gIC8qIE1peGlucyB3aXRoaW4gbWl4aW5zISAqL1xuICBAaW5jbHVkZSByb3VuZGVkKCRyYWRpdXMpO1xuICBib3JkZXI6ICRib3JkZXI7XG59XG5cbkBtaXhpbiBmYW5jeS1saW5rcyB7XG4gIGEge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbn0iLCIvLyBDb2xvcnNcbiR0ZXh0LWNvbG9yOiAjMjIyO1xuJHRoZW1lLWNvbG9yOiAjMTcwYTQ4O1xuJHNlY29uZGFyeS1jb2xvcjogI2YyNzczMTtcbiR0ZXJuYXJ5LWNvbG9yOiAjY2NmOTYyO1xuJGxpbmstY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XG4kbWVudS1pdGVtLWNvbG9yOiBibHVlO1xuXG4vLyBGb250c1xuJHRleHQtZm9udDogXCJQb3BwaW5zXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuJGhlYWRsaW5lLWZvbnQ6IFwiQWxlZ3JleWErU2Fuc1wiLCBHZW9yZ2lhLCBzZXJpZjtcblxuLy8gTGF5b3V0XG4kY29udGVudC13aWR0aDogOTB2dztcbiRoZWFkZXItaGVpZ2h0OiA2MHB4O1xuJGZvb3Rlci1oZWlnaHQ6IDkwcHg7XG4kY29sOiBjb2x1bW4td2lkdGgoJGNvbHVtbnM6IDgpOyIsIi8vIEZ1bmN0aW9ucyFcbkBmdW5jdGlvbiBzdW0oJGxlZnQsICRyaWdodCkge1xuXHRAcmV0dXJuICRsZWZ0ICsgJHJpZ2h0O1xufVxuXG5cbkBmdW5jdGlvbiBlbSgkcGl4ZWxzLCAkY29udGV4dDogMTZweCkge1xuXHRAcmV0dXJuICgkcGl4ZWxzIC8gJGNvbnRleHQpICogMWVtO1xufVxuXG5AZnVuY3Rpb24gY29sdW1uLXdpZHRoKCRjb2x1bW5zOiAxMiwgJHBhZ2Utd2lkdGg6IDEwMCUsICRnYXA6IDElKSB7XG5cdEByZXR1cm4gKCRwYWdlLXdpZHRoIC0gJGdhcCooJGNvbHVtbnMgLSAxKSkgLyAkY29sdW1ucztcbn0iXX0= */
