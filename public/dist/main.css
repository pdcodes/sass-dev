/* Imports */
/* Mixins */
/* Variable arguments can be added using '...' */
/* Default value is added with ": {value}" */
/* 
 * Default values must be referenced explicitly
 * if you wanted to use box(default radius, custom border)
 * you would do so by adding box($border: {values};
*/
/* Fonts */
@import url(https://fonts.googleapis.com/css?family=Alegreya+Sans);
@import url(https://fonts.googleapis.com/css?family=Poppins);
/* Styles */
body {
  font-family: sans-serif;
  color: #222; }

h1, h2, h3, h4 {
  font-family: "Alegreya+Sans", Georgia, serif; }

p {
  font-family: "Poppins", Arial, sans-serif; }

a {
  color: #f27731; }

img {
  display: block; }

.warning-button {
  background-color: orange;
  color: #fff;
  font-size: 22px;
  font-weight: bold;
  border-radius: 8px;
  padding: 9px 12px; }

* html body {
  font-size: 125%; }

#header {
  /* Mixins within mixins! */
  border-radius: 24px;
  border: 1px solid black;
  height: 60px;
  -webkit-box-shadow: 2px 0px 4px #999, 1px 1px 6px #f27731;
  box-shadow: 2px 0px 4px #999, 1px 1px 6px #f27731; }

#footer {
  height: 90px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1peGlucy9fbWl4aW5zLnNjc3MiLCJwYXJ0aWFscy9fdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYTtBQ0FiLFlBQVk7QUFZWixpREFBaUQ7QUF5QmpELDZDQUE2QztBQUs3Qzs7OztFQUlFO0FEcENGLFdBQVc7QUNOVCxtRUFBWTtBQUFaLDZEQUFZO0FEVWQsWUFBWTtBQUNaO0VBQ0Usd0JBQXVCO0VBQ3ZCLFlFaEJlLEVGaUJoQjs7QUFFRDtFQUNFLDZDRVg2QyxFRlk5Qzs7QUFFRDtFQUNFLDBDRWhCc0MsRUZpQnZDOztBQUVEO0VBQ0UsZUUxQnVCLEVGMkJ4Qjs7QUFFRDtFQUNFLGVBQWMsRUFDZjs7QUFFRDtFQzVCRSx5QkFBd0I7RUFDeEIsWUFBVztFQW1CVCxnQkFBVTtFQUNWLGtCQUFZO0VBVWQsbUJEQW9CO0VBQ3BCLGtCQUFpQixFQUNsQjs7QUFHQztFQUNFLGdCQUFlLEVBQ2hCOztBQUdIO0VDREUsMkJBQTJCO0VBVDNCLG9CRFdpQjtFQ0FqQix3QkRBa0M7RUFDbkMsYUVyQ21CO0VEQWxCLDBEQ1h1QjtFRFd2QixrRENYdUIsRUYwRHhCOztBQVdEO0VBQ0UsYUUxRGtCLEVGMkRuQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEltcG9ydHMgKi9cclxuQGltcG9ydCBcInBhcnRpYWxzL3ZhcmlhYmxlc1wiO1xyXG5AaW1wb3J0IFwibWl4aW5zL21peGluc1wiO1xyXG5cclxuLy8gU0NTUyBJbXBvcnRzID09PSBDU1MgSW1wb3J0cyBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOlxyXG4vL0BpbXBvcnQgdXJsKClcclxuLy9AaW1wb3J0IFwiaHR0cDovL1wiXHJcbi8vQGltcG9ydCBcImZpbGVuYW1lLmNzc1wiXHJcbi8vQGltcG9ydCBcInN0eWxlLXNjcmVlbiBzY3JlZW47XCJcclxuXHJcbi8qIEZvbnRzICovXHJcbkBpbmNsdWRlIGdvb2dsZS1mb250KFwiQWxlZ3JleWErU2Fuc1wiKTtcclxuQGluY2x1ZGUgZ29vZ2xlLWZvbnQoXCJQb3BwaW5zXCIpO1xyXG5cclxuLyogU3R5bGVzICovXHJcbmJvZHkge1xyXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gIGNvbG9yOiAkdGV4dC1jb2xvcjtcclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQge1xyXG4gIGZvbnQtZmFtaWx5OiAkaGVhZGxpbmUtZm9udDtcclxufVxyXG5cclxucCB7XHJcbiAgZm9udC1mYW1pbHk6ICR0ZXh0LWZvbnQ7XHJcbn1cclxuXHJcbmEge1xyXG4gIGNvbG9yOiAkbGluay1jb2xvcjtcclxufVxyXG5cclxuaW1nIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLndhcm5pbmctYnV0dG9uIHtcclxuICBAaW5jbHVkZSB3YXJuaW5nO1xyXG4gIEBpbmNsdWRlIGxhcmdlLXRleHQ7XHJcbiAgQGluY2x1ZGUgcm91bmRlZCg4cHgpO1xyXG4gIHBhZGRpbmc6IDlweCAxMnB4O1xyXG59XHJcblxyXG5AaW5jbHVkZSBhcHBseS10by1pZS02IHtcclxuICBib2R5IHtcclxuICAgIGZvbnQtc2l6ZTogMTI1JTtcclxuICB9XHJcbn1cclxuXHJcbiNoZWFkZXIge1xyXG4gIEBpbmNsdWRlIGJveCgyNHB4LCAxcHggc29saWQgYmxhY2spO1xyXG5cdGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgQGluY2x1ZGUgYm94LXNoYWRvdygycHggMHB4IDRweCAjOTk5LCAxcHggMXB4IDZweCAkc2Vjb25kYXJ5LWNvbG9yKTtcclxuXHJcbiAgI21haW4tbWVudSB7XHJcblxyXG4gIH1cclxuICBcclxuICAjbG9nbyB7XHJcblxyXG4gIH1cclxufVxyXG5cclxuI21haW4ge1xyXG5cclxuICAjY29udGVudCB7XHJcbiAgfVxyXG5cclxuICAjc2lkZWJhciB7XHJcbiAgfVxyXG59XHJcblxyXG4jZm9vdGVyIHtcclxuICBoZWlnaHQ6ICRmb290ZXItaGVpZ2h0O1xyXG59XHJcbiIsIi8qIE1peGlucyAqL1xuQG1peGluIGdvb2dsZS1mb250KCRmb250KSB7XG4gICRmb250OiB1bnF1b3RlKCRmb250KTtcbiAgLy8gQ1NTIGltcG9ydHMgY2FuIGJlIGludGVycG9sYXRlZCB1c2luZyB0aGUgI3t9IHN5bnRheFxuICBAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9I3skZm9udH0pXG59XG5cbkBtaXhpbiB3YXJuaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLyogVmFyaWFibGUgYXJndW1lbnRzIGNhbiBiZSBhZGRlZCB1c2luZyAnLi4uJyAqL1xuQG1peGluIGJveC1zaGFkb3coJHNoYWRvd3MuLi4pIHtcbiAgYm94LXNoYWRvdzogJHNoYWRvd3M7XG59XG5cbi8vIENvbnRlbnQgZGlyZWN0aXZlIGFkZHMgYXR0cmlidXRlcyBhZnRlciAqIGh0bWxcbi8vICogaHRtbCBpcyBqdXN0IHRoZSBleGFtcGxlIGZvciB0aGlzIElFNiBcbi8vIHRoaXMgaXMgY2FsbGVkIFwiY29udGVudCBwYXNzaW5nXCJcbkBtaXhpbiBhcHBseS10by1pZS02IHtcbiAgKiBodG1sIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gbGFyZ2UtdGV4dCB7XG4gIGZvbnQ6IHtcbiAgICBzaXplOiAyMnB4O1xuICAgIHdlaWdodDogYm9sZDtcbiAgfVxufVxuXG5AbWl4aW4gZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qIERlZmF1bHQgdmFsdWUgaXMgYWRkZWQgd2l0aCBcIjoge3ZhbHVlfVwiICovXG5AbWl4aW4gcm91bmRlZCgkcmFkaXVzOiA2cHgpIHtcbiAgYm9yZGVyLXJhZGl1czogJHJhZGl1cztcbn1cblxuLyogXG4gKiBEZWZhdWx0IHZhbHVlcyBtdXN0IGJlIHJlZmVyZW5jZWQgZXhwbGljaXRseVxuICogaWYgeW91IHdhbnRlZCB0byB1c2UgYm94KGRlZmF1bHQgcmFkaXVzLCBjdXN0b20gYm9yZGVyKVxuICogeW91IHdvdWxkIGRvIHNvIGJ5IGFkZGluZyBib3goJGJvcmRlcjoge3ZhbHVlc307XG4qL1xuQG1peGluIGJveCgkcmFkaXVzLCAkYm9yZGVyOiAxcHggc29saWQgYmxhY2spIHtcbiAgLyogTWl4aW5zIHdpdGhpbiBtaXhpbnMhICovXG4gIEBpbmNsdWRlIHJvdW5kZWQoJHJhZGl1cyk7XG4gIGJvcmRlcjogJGJvcmRlcjtcbn1cblxuQG1peGluIGZhbmN5LWxpbmtzIHtcbiAgYSB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxufSIsIi8vIENvbG9yc1xuJHRleHQtY29sb3I6ICMyMjI7XG4kdGhlbWUtY29sb3I6ICMxNzBhNDg7XG4kc2Vjb25kYXJ5LWNvbG9yOiAjZjI3NzMxO1xuJHRlcm5hcnktY29sb3I6ICNjY2Y5NjI7XG4kbGluay1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcbiRtZW51LWl0ZW0tY29sb3I6IHdoaXRlO1xuXG4vLyBGb250c1xuJHRleHQtZm9udDogXCJQb3BwaW5zXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuJGhlYWRsaW5lLWZvbnQ6IFwiQWxlZ3JleWErU2Fuc1wiLCBHZW9yZ2lhLCBzZXJpZjtcblxuLy8gTGF5b3V0XG4kY29udGVudC13aWR0aDogOTB2dztcbiRoZWFkZXItaGVpZ2h0OiA2MHB4O1xuJGZvb3Rlci1oZWlnaHQ6IDkwcHg7Il19 */
