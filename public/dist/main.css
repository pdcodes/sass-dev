/* Imports */
/* Mixins */
/* Variable arguments can be added using '...' */
/* Default value is added with ": {value}" */
/* 
 * Default values must be referenced explicitly
 * if you wanted to use box(default radius, custom border)
 * you would do so by adding box($border: {values};
*/
/* Fonts */
@import url(https://fonts.googleapis.com/css?family=Alegreya+Sans);
@import url(https://fonts.googleapis.com/css?family=Poppins);
/* Styles */
body {
  font-family: sans-serif;
  color: #222;
  font-size: 1.125em; }
  @media only screen and (max-width: 960px) {
    body {
      font-size: 125%; } }

h1, h2, h3, h4 {
  font-family: "Alegreya+Sans", Georgia, serif; }

p {
  font-family: "Poppins", Arial, sans-serif; }

a {
  color: #f27731; }
  a:hover {
    color: #ca510d; }

img {
  display: block; }

.warning-button, .cta-button, .super-cta-button {
  background-color: orange;
  color: #fff;
  font-size: 22px;
  font-weight: bold;
  border-radius: 8px;
  padding: 9px 12px; }
  .warning-button:hover, .cta-button:hover, .super-cta-button:hover {
    background-color: #ffc966; }

.cta-button, .super-cta-button {
  border-radius: 6px;
  font-weight: bold; }

.super-cta-button {
  text-decoration: underline; }

.sub-title {
  font-style: italic; }

.sub-title {
  font-size: 1.25em;
  background-color: yellow; }

* html body {
  font-size: 125%; }

#header {
  /* Mixins within mixins! */
  border-radius: 24px;
  border: 1px solid black;
  height: 60px;
  -webkit-box-shadow: 2px 0px 4px #999, 1px 1px 6px #f27731;
  box-shadow: 2px 0px 4px #999, 1px 1px 6px #f27731; }
  #header #main-menu li {
    display: inline-block; }
  #header #main-menu a {
    color: blue;
    padding: 6px 8px;
    border-bottom: 1px solid rgba(0, 0, 0, 0);
    -webkit-transition: border-bottom 0.5s;
    transition: border-bottom 0.5s;
    -webkit-transition-timing-function: ease-in-out;
    transition-timing-function: ease-in-out; }
    #header #main-menu a:hover {
      border-bottom: 1px solid black; }

#main {
  width: 90vw;
  margin-left: auto;
  margin-right: auto; }
  @media only screen and (max-width: 480px) {
    #main {
      width: auto;
      max-width: 960px; } }
  #main #content {
    float: left;
    width: 69.75%; }
  #main #sidebar {
    float: right;
    width: 23.25%; }
    #main #sidebar li {
      list-style-type: none; }

#footer {
  height: 90px; }

#peter-special-id {
  font-weight: bold;
  color: blue; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
